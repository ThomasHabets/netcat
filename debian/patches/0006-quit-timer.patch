From: Aron Xu <aron@debian.org>
Date: Mon, 13 Feb 2012 15:16:04 +0800
Subject: [PATCH] quit timer

---
 netcat.c |   29 +++++++++++++++++++++++++++--
 1 files changed, 27 insertions(+), 2 deletions(-)

--- a/netcat.c
+++ b/netcat.c
@@ -75,6 +75,7 @@
 #include <errno.h>
 #include <netdb.h>
 #include <poll.h>
+#include <signal.h>
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -109,6 +110,7 @@
 int	nflag;					/* Don't do name look up */
 char   *Pflag;					/* Proxy username */
 char   *pflag;					/* Localport flag */
+int     qflag = 0;                             /* Quit after some secs */
 int	rflag;					/* Random ports flag */
 char   *sflag;					/* Source Address */
 int	tflag;					/* Telnet Emulation */
@@ -147,6 +149,7 @@
 
 static int connect_with_timeout(int fd, const struct sockaddr *sa,
         socklen_t salen, int ctimeout);
+static void quit();
 
 int
 main(int argc, char *argv[])
@@ -170,7 +173,7 @@
 	sv = NULL;
 
 	while ((ch = getopt(argc, argv,
-	    "46CDdhI:i:klnO:P:p:rSs:tT:UuV:vw:X:x:z")) != -1) {
+	    "46CDdhI:i:klnO:P:p:q:rSs:tT:UuV:vw:X:x:z")) != -1) {
 		switch (ch) {
 		case '4':
 			family = AF_INET;
@@ -222,6 +225,11 @@
 		case 'p':
 			pflag = optarg;
 			break;
+                case 'q':
+			qflag = strtonum(optarg, INT_MIN, INT_MAX, &errstr);
+			if (errstr)
+				errx(1, "quit timer %s: %s", errstr, optarg);
+			break;
 		case 'r':
 			rflag = 1;
 			break;
@@ -905,9 +913,19 @@
 			}
 			else if (pfd[1].revents & POLLHUP) {
 			shutdown_wr:
+			/* if the user asked to exit on EOF, do it */
+			if (qflag == 0) {
 				shutdown(nfd, SHUT_WR);
-				pfd[1].fd = -1;
-				pfd[1].events = 0;
+				close(wfd);
+				exit(0);
+			}
+			/* if user asked to die after a while, arrange for it */
+			if (qflag > 0) {
+				signal(SIGALRM, quit);
+				alarm(qflag);
+			}
+			pfd[1].fd = -1;
+			pfd[1].events = 0;
 			}
 		}
 	}
@@ -1140,6 +1158,7 @@
 	\t-O length	TCP send buffer length\n\
 	\t-P proxyuser\tUsername for proxy authentication\n\
 	\t-p port\t	Specify local port for remote connects\n\
+        \t-q secs\t	quit after EOF on stdin and delay of secs\n\
 	\t-r		Randomize remote ports\n\
 	\t-S		Enable the TCP MD5 signature option\n\
 	\t-s addr\t	Local source address\n\
@@ -1162,9 +1181,19 @@
 {
 	fprintf(stderr,
 	    "usage: nc [-46CDdhklnrStUuvz] [-I length] [-i interval] [-O length]\n"
-	    "\t  [-P proxy_username] [-p source_port] [-s source]\n"
+	    "\t  [-P proxy_username] [-p source_port] [-q seconds] [-s source]\n"
 	    "\t  [-T ToS] [-V rtable] [-w timeout] [-X proxy_protocol]\n"
 	    "\t  [-x proxy_address[:port]] [destination] [port]\n");
 	if (ret)
 		exit(1);
 }
+
+/*
+ * quit()
+ * handler for a "-q" timeout (exit 0 instead of 1)
+ */
+static void quit()
+{
+        /* XXX: should explicitly close fds here */
+        exit(0);
+}
--- a/nc.1
+++ b/nc.1
@@ -40,6 +40,7 @@
 .Op Fl O Ar length
 .Op Fl P Ar proxy_username
 .Op Fl p Ar source_port
+.Op Fl q Ar seconds
 .Op Fl s Ar source
 .Op Fl T Ar toskeyword
 .Op Fl V Ar rtable
@@ -150,6 +151,10 @@
 It is an error to use this option in conjunction with the
 .Fl l
 option.
+.It Fl q Ar seconds
+after EOF on stdin, wait the specified number of seconds and then quit. If
+.Ar seconds
+is negative, wait forever.
 .It Fl r
 Specifies that source and/or destination ports should be chosen randomly
 instead of sequentially within a range or in the order that the system
