From: Aron Xu <aron@debian.org>
Date: Mon, 13 Feb 2012 19:06:52 +0800
Subject: [PATCH] misc connection failures

---
 netcat.c |   22 +++++++++++++++++++---
 1 files changed, 19 insertions(+), 3 deletions(-)

--- a/netcat.c
+++ b/netcat.c
@@ -88,6 +88,7 @@
 #include <netdb.h>
 #include <poll.h>
 #include <signal.h>
+#include <stddef.h>
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -175,7 +176,10 @@
 	struct addrinfo hints;
 	struct servent *sv;
 	socklen_t len;
-	struct sockaddr_storage cliaddr;
+	union {
+        	struct sockaddr_storage storage;
+		struct sockaddr_un forunix;
+	} cliaddr;
 	char *proxy = NULL;
 	const char *errstr, *proxyhost = "", *proxyport = NULL;
 	struct addrinfo proxyhints;
@@ -479,7 +483,11 @@
 				len = sizeof(cliaddr);
 				connfd = accept(s, (struct sockaddr *)&cliaddr,
 				    &len);
-				if(vflag) {
+				if(vflag && family == AF_UNIX) {
+	+				fprintf(stderr, "Connection from \"%.*s\" accepted\n",
+						(len - (int)offsetof(struct sockaddr_un, sun_path)),
+						((struct sockaddr_un*)&cliaddr)->sun_path);
+				} else if(vflag) {
 					char *proto = proto_name(uflag, dccpflag);
 				/* Don't look up port if -n. */
 					if (nflag)
@@ -520,6 +528,8 @@
 				close(connfd);
 			}
 
+			if (vflag && kflag)
+                                fprintf(stderr, "Connection closed, listening again.\n");
 			if (kflag)
 				continue;
 			if (family != AF_UNIX) {
@@ -626,6 +636,8 @@
 		return (-1);
 	}
 
+        unlink(path);
+
 	if (bind(s, (struct sockaddr *)&sun, SUN_LEN(&sun)) < 0) {
 		close(s);
 		return (-1);
@@ -647,8 +659,10 @@
 		if ((s = unix_bind(unix_dg_tmp_socket)) < 0)
 			return (-1);
 	} else {
-		if ((s = socket(AF_UNIX, SOCK_STREAM, 0)) < 0)
+		if ((s = socket(AF_UNIX, SOCK_STREAM, 0)) < 0) {
+                        errx(1,"create unix socket failed");
 			return (-1);
+                }
 	}
 	(void)fcntl(s, F_SETFD, 1);
 
@@ -659,9 +673,11 @@
 	    sizeof(sun.sun_path)) {
 		close(s);
 		errno = ENAMETOOLONG;
+                warn("unix connect abandoned");
 		return (-1);
 	}
 	if (connect(s, (struct sockaddr *)&sun, SUN_LEN(&sun)) < 0) {
+                warn("unix connect failed");
 		close(s);
 		return (-1);
 	}
